swagger: "2.0"
info:
  description: "This is an [Express](http://expressjs.com/) web application which implements some tasks to automate the provisioning of users in the Digital Citizenship Azure API management _developer portal_.\n\nThe aim is to automate some operations that would otherwise require the manual intervention of the APIs administrator: this lets developers start testing the API just after signing-up.\n\nUser's authentication takes place against an [Azure Active Directory B2C](https://azure.microsoft.com/en-us/services/active-directory-b2c/) tenant."
  version: "0.1.0"
  title: Digital citizenship portal

paths: {}

definitions:

  #Returned by GET /subscriptions
  #Returned by GET /subscriptions/:email
  SubscriptionCollection:
    type: array
    items:
      $ref: "#/definitions/SubscriptionContract"

  #Returned by POST /subscriptions
  #Returned by POST /subscriptions/:email
  #Returned by PUT /subscriptions/:subscriptionId/:keyType
  SubscriptionContract:
    allOf:
      - $ref: "#/definitions/Resource"
      - type: object
        properties:
          userId:
            type: string
          productId:
            type: string
          displayName:
            type: string
          state:
            type: string
          createdDate:
            type: string
            format: "date-time"
          startDate:
            type: string
            format: "date-time"
          expirationDate:
            type: string
            format: "date-time"
          endDate:
            type: string
            format: "date-time"
          notificationDate:
            type: string
            format: "date-time"
          primaryKey:
            type: string
          secondaryKey:
            type: string
          stateComment:
            type: string
        required:
          - userId
          - productId
          - state
          - primaryKey
          - secondaryKey

  Resource:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string

  #Returned by GET /services/:serviceId
  Service:
    description: A Service tied to an user's subscription.
    type: object
    properties:
      service_id:
        $ref: "#/definitions/ServiceId"
      service_name:
        $ref: "#/definitions/ServiceName"
      organization_name:
        $ref: "#/definitions/OrganizationName"
      department_name:
        $ref: "#/definitions/DepartmentName"
      authorized_cidrs:
        description: |-
          Allowed source IPs or CIDRs for this service.
        type: array
        items:
          $ref: "#/definitions/CIDR"
      authorized_recipients:
        description: |-
          If non empty, the service will be able
          to send messages only to these fiscal codes.
        type: array
        items:
          $ref: "#/definitions/FiscalCode"
      is_visible:
        type: boolean
        default: false
      max_allowed_payment_amount:
        $ref: "#/definitions/MaxAllowedPaymentAmount"
      organization_fiscal_code:
        $ref: "#/definitions/OrganizationFiscalCode"
      version:
        type: integer
      id:
        type: string
    required:
      - service_id
      - service_name
      - organization_name
      - department_name
      - authorized_cidrs
      - authorized_recipients
      - organization_fiscal_code

  #Returned by PUT /services/:serviceId
  ServicePublic:
    title: Service (public)
    description: A Service associated to an user's subscription.
    type: object
    properties:
      service_id:
        $ref: "#/definitions/ServiceId"
      service_name:
        $ref: "#/definitions/ServiceName"
      organization_name:
        $ref: "#/definitions/OrganizationName"
      department_name:
        $ref: "#/definitions/DepartmentName"
      organization_fiscal_code:
        $ref: "#/definitions/OrganizationFiscalCode"
      version:
        type: integer
    required:
      - service_id
      - service_name
      - organization_name
      - department_name
      - organization_fiscal_code
      - version

  ServiceId:
    type: string
    description: |-
      The ID of the Service. Equals the subscriptionId of a registered
      API user.
    minLength: 1

  ServiceName:
    type: string
    description: The name of the service. Will be added to the content of sent messages.
    minLength: 1

  OrganizationName:
    type: string
    description: |-
      The organization that runs the service. Will be added to the content
      of sent messages to identify the sender.
    minLength: 1

  DepartmentName:
    type: string
    description: |-
      The department inside the organization that runs the service. Will
      be added to the content of sent messages.
    minLength: 1

  CIDR:
    type: string
    description: Describes a single IP or a range of IPs.
    pattern: "^([0-9]{1,3}[.]){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$"

  FiscalCode:
    type: string
    description: User's fiscal code.
    format: FiscalCode
    x-import: italia-ts-commons/lib/strings
    example: SPNDNL80R13C555X

  OrganizationFiscalCode:
    type: string
    description: Organization fiscal code.
    format: OrganizationFiscalCode
    x-import: italia-ts-commons/lib/strings
    example: "12345678901"

  MaxAllowedPaymentAmount:
    description: |-
      Maximum amount in euro cents that a service is allowed to charge to a user.
    type: integer
    minimum: 0
    maximum: 9999999999
    default: 0

  #Returned by GET /user
  #Returned by GET /user/:email
  UserData:
    type: object
    properties:
      apimUser:
        $ref: "#/definitions/ExtendedUserContract"
      authenticatedUser:
        $ref: "#/definitions/AdUser"
    required:
      - authenticatedUser

  ExtendedUserContract:
    allOf:
      - $ref: "#/definitions/UserContract"
      - type: object
        properties:
          id:
            type: string
          name:
            type: string
          email:
            type: string
          groupNames:
            type: array
            items:
              type: string
        required:
          - id
          - name
          - email
          - groupNames

  UserContract:
    allOf:
      - $ref: "#/definitions/Resource"
      - type: object
        properties:
          state:
            type: string
          note:
            type: string
          identities:
            type: array
            items:
              $ref: "#/definitions/UserIdentityContract"
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          registrationDate:
            type: string
            format: 'date-time'
          groups:
            type: array
            items:
              $ref: "#/definitions/GroupContractProperties"

  UserIdentityContract:
    type: object
    properties:
      provider:
        type: string
      id:
        type: string

  GroupContractProperties:
    type: object
    properties:
      displayName:
        type: string
      description:
        type: string
      builtIn:
        type: boolean
      type:
        type: string
      externalId:
        type: string
    required:
      - displayName

  AdUser:
    type: object
    properties:
      emails:
        type: array
        items:
          $ref: '#/definitions/EmailString'
      extension_Department:
        type: string
      extension_Organization:
        type: string
      extension_Service:
        type: string
      family_name:
        type: string
      given_name:
        type: string
      oid:
        $ref: '#/definitions/NoEmptyString'
    required:
      - emails
      - family_name
      - given_name
      - oid

  EmailString:
    type: string
    format: email

  NoEmptyString:
    type: string
    minLength: 1

  #Returned by GET /users
  UserDataList:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/ApimUser"
      length:
        type: number

  ApimUser:
    type: object
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  #Returned by GET /configuration
  MsalConfig:
    type: object
    properties:
      audience:
        type: string
      authority:
        type: string
      b2cScopes:
        type: "array"
        items:
          type: string
      changePasswordLink:
        type: string
      clientID:
        type: string